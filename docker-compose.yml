# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose
services:  
  licensing.api:
    build:
      dockerfile: ./Rfsmart.Phoenix.Licensing.Web/Dockerfile
      args:
        NUGET_USERNAME: ${NUGET_USERNAME}
        NUGET_TOKEN: ${NUGET_TOKEN}
    ports:
      - "5010:5010"
    healthcheck:
      test: timeout 10s bash -c ':> /dev/tcp/127.0.0.1/5010' || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
    networks:
      - phoenix

  postgres:
    image: postgres:16.2
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGUSER: ${POSTGRES_USER:-postgres}
      PGDATA: /data/postgres
    volumes:
      - lc_postgres_data:/data/postgres
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - phoenix
    restart: always

  migrate.schemas:
    image: ghcr.io/rf-smart-for-oraclecloud/cli
    command: db schema migrate --migrations-path /Migrations --ensure-db
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DOTNET_ENVIRONMENT: Development
      Database__Zones__zone1__Host: postgres
      AWS_REGION: us-east-1
    volumes:
      - ./cli-config:/home/app/.rfsmart:ro
      - ./Migrations:/Migrations:ro
    networks:
      - phoenix

networks:
  phoenix:
    driver: bridge

volumes:
  lc_postgres_data: