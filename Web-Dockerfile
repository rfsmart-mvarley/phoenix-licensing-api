FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
USER app
WORKDIR /app
EXPOSE 80

FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
ARG NUGET_TOKEN
ARG NUGET_USERNAME
WORKDIR /src
COPY ["nuget.config", "nuget.config"]
COPY ["Rfsmart.Phoenix.TEMPLATE.Web/Rfsmart.Phoenix.TEMPLATE.Web.csproj", "Rfsmart.Phoenix.TEMPLATE.Web/"]
COPY ["Rfsmart.Phoenix.TEMPLATE/Rfsmart.Phoenix.TEMPLATE.csproj", "Rfsmart.Phoenix.TEMPLATE/"]
RUN dotnet nuget update source github --password "$NUGET_TOKEN" --username "$NUGET_USERNAME" --store-password-in-clear-text
RUN dotnet restore "./Rfsmart.Phoenix.TEMPLATE.Web/Rfsmart.Phoenix.TEMPLATE.Web.csproj"
COPY ["Rfsmart.Phoenix.TEMPLATE.Web", "Rfsmart.Phoenix.TEMPLATE.Web"]
COPY ["Rfsmart.Phoenix.TEMPLATE", "Rfsmart.Phoenix.TEMPLATE"]
WORKDIR "/src/Rfsmart.Phoenix.TEMPLATE.Web"
RUN dotnet build "./Rfsmart.Phoenix.TEMPLATE.Web.csproj" -c $BUILD_CONFIGURATION -o /app/build

FROM build AS publish
ARG VERSION=
ARG VERSION_SUFFIX=
RUN semVer=${VERSION:=0.0.0} \
    && if [ ! -z "$VERSION_SUFFIX" ]; then semVer="$semVer"-"$VERSION_SUFFIX"; fi \
    && dotnet publish "./Rfsmart.Phoenix.TEMPLATE.Web.csproj" -c Release -o /app/publish /p:UseAppHost=false /p:Version="$semVer"

FROM base AS final
WORKDIR /app
COPY --from=publish /app/publish .
# Run the createLogPath script on Linux to ensure the automatic instrumentation logs are genereated without permission isues
USER root
RUN /app/datadog/createLogPath.sh
USER app
ENV ASPNETCORE_HTTP_PORTS=80
ENTRYPOINT ["dotnet", "Rfsmart.Phoenix.TEMPLATE.Web.dll"]